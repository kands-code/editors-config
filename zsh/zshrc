# for zsh
fpath=(
  /opt/homebrew/share/zsh/site-functions
  ~/.config/zsh/zfunc
  "${fpath[@]}")
autoload -U +X compinit && compinit
autoload -U +X bashcompinit && bashcompinit
zstyle ':completion:*' use-cache on
zstyle ':completion:*' menu select
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:approximate:*' max-errors 1 numeric
zstyle ':completion:*' cache-path "$HOME/.cache/zsh/.compcache"
autoload -Uz promptinit
promptinit
prompt walters

# utils config
export GPG_TTY=$(tty)
export GNUPGHOME="$HOME/.local/share/gnupg"
export PATH="$paths[homebrew]":"$PATH" # homebrew first

# daily update
dailyup() {
  # brew
  brew update
  brew upgrade
  brew autoremove
  brew cleanup --prune=all
  # rust
  if command -v rustup >/dev/null 2>&1; then
    rustup update
    if [ "$?" = '0' ]; then
      cargo install --all-features \
        mdbook \
        mdbook-katex \
        mdbook-toc
    fi
  fi
  # haskell
  if command -v cabal >/dev/null 2>&1; then
    cabal update
    if command -v stack >/dev/null 2>&1; then
      stack update
    fi
  fi
}

if command -v defaults >/dev/null 2>&1; then
  reload-dock() {
    defaults write com.apple.dock ResetLaunchPad -bool true && killall Dock
  }
fi

if command -v python3 >/dev/null 2>&1; then
  create-venv() {
    local vname="$(basename $PWD)"
    if [[ -n "$1" ]]; then
      vname="$1"
    fi
    python3 -m venv .venv --prompt "$vname"
  }
  activate-venv() {
    local dname=".venv"
    if [[ -n "$1" ]]; then
      dname="$1"
    fi
    if [[ -d "$PWD/$dname" ]] && [[ -f "$PWD/$dname/bin/activate" ]]; then
      source "$PWD/$dname/bin/activate"
    fi
  }
fi

if command -v ffmpeg >/dev/null 2>&1; then
  # aria2c wrapper
  a2c() {
    if command -v aria2c >/dev/null 2>&1; then
      aria2c --max-connection-per-server=4 \
        --min-split-size=5M \
        --continue \
        "$@"
    else
      echo "need aria2c..."
    fi
  }
  # yt-dlp wrapper
  yd() {
    if command -v yt-dlp >/dev/null 2>&1; then
      local url="$1"
      shift
      if [ -z "$url" ]; then
        echo "please give a url"
        return 1
      fi
      yt-dlp -o "%(uploader_id)s/%(playlist_title)s/p%(playlist_index)03d-%(title)s.%(ext)s" \
        -f "bestvideo+bestaudio" \
        --recode-video="mp4" \
        --write-auto-subs \
        --sub-format="vtt" \
        --sub-langs="en.*,zh-Hans" \
        --embed-subs \
        $url \
        "$@"
      return 0
    else
      echo "need yt-dlp..."
    fi
  }
fi
